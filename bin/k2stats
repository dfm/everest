#!/usr/bin/env python
# -*- coding: utf-8 -*-
'''
k2stats
-------

'''

import argparse

if __name__ == '__main__':

  parser = argparse.ArgumentParser(prog = 'estats', add_help = True)
  parser.add_argument("campaign", nargs = '?', type = str, default = None, help = 'The K2 campaign to download')
  parser.add_argument("model", nargs = '?', type = str, default = None, help = 'The everest model to analyze')
  parser.add_argument("compare_to", nargs = '?', type = str, default = None, help = 'The model to compare to')
  parser.add_argument("-i", "--inject", action = 'store_true', help = 'Run injection statistics?')
  args = parser.parse_args()
  
  # Get the campaign number
  if args.campaign is not None:
    if '.' in args.campaign:
      campaign = float(args.campaign)
    else:
      campaign = int(args.campaign)
  else:
    campaign = None
  
  # Get the function
  if args.inject:
    from everest import InjectionStatistics as Statistics
    args.compare_to = None
  else:
    from everest import Statistics
  
  # Call the stats function
  if campaign is not None:
    if args.model is not None:
      if args.compare_to is not None:
        Statistics(campaign = campaign, model = args.model, compare_to = args.compare_to)
      else:
        Statistics(campaign = campaign, model = args.model)
    else:
      if args.compare_to is not None:
        Statistics(campaign = campaign, compare_to = args.compare_to)
      else:
        Statistics(campaign = campaign)
  else:
    if args.model is not None:
      if args.compare_to is not None:
        Statistics(model = args.model, compare_to = args.compare_to)
      else:
        Statistics(model = args.model)
    else:
      if args.compare_to is not None:
        Statistics(compare_to = args.compare_to)
      else:
        Statistics()